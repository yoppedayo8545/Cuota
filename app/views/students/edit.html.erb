<canvas id="canvas"></canvas>

<div class='search-bar-contents-devise'>
 <div class="icon-box">
  <%= link_to image_tag('cuota-sample.png', class:"cuota-icon-devise"), "/" %>
 </div> 
</div>

  <%= render "devise/shared/error_messages", resource: @student %> 


  <h1>生徒メモ</h1>
    <div class="student-edit-box">
      <div class="student-school-status">
        <h4>学校名<br><%= @student.school.name %></h4>
        <h4>氏名<br>
          <%= @student.last_name  %> <%= @student.first_name %>
        </h4>
        <h4>フリガナ<br>
          <%= @student.last_kana  %> <%= @student.first_kana %>
        </h4>
      </div>
      <div class="student-status">
        <h4>学年<br>
          <%= @student.school_year_id %>年生
        </h4>
        <h4>クラス<br>
          <%= @student.school_class_id %>組
        </h4>
        <h4>出席番号<br>
          <%= @student.number %>番
        </h4>
        <h4>性別<br>
          <%= @student.gender.name %>
        </h4>
        <h4>誕生日<br>
          <%= @student.date %>
        </h4>
        <h4>兄弟<br>
          <%= @student.brother %>
        </h4>
      </div>
    
    <script>
      function connect_text( text_id, ischecked ) {
        if( ischecked == true ) {
           document.getElementById(text_id).disabled = false;
        }
        else {
           document.getElementById(text_id).disabled = true;
        }
      }

      

    </script>

    <div id="tabArea">

      <input type="radio" name="tab" id="tab1" onclick="tabClick(1)" checked>
        <label for="tab1">1年生</label>

      <input type="radio" name="tab" id="tab2" onclick="tabClick(2)">
        <label for="tab2">2年生</label>

      <input type="radio" name="tab" id="tab3" onclick="tabClick(3)">
        <label for="tab3">3年生</label>

      <input type="radio" name="tab" id="tab4" onclick="tabClick(4)">
        <label for="tab4">4年生</label>
        
      <input type="radio" name="tab" id="tab5" onclick="tabClick(5)">
        <label for="tab5">5年生</label>
      
      <input type="radio" name="tab" id="tab6" onclick="tabClick(6)">
        <label for="tab6">6年生</label>

      <div class="tabBody"><p id="tabNo">

      <div class="box-student-edit">
        <%= form_with model: @student, url: student_path(@student.id), local: true do |f| %>
        
        <div class="box-inner-edit">
          <div class="column-memo">
            <%= f.label :allergy, "アレルギー" %><br>
            <%= f.text_field :allergy, autofocus: true, placeholder: "アレルギー名 ", autocomplete: "allergy" %>
          </div>
        </div>

        <div class="medicine-lists">
           <%= f.label :medicine, "エピペン・内服薬" %><br>
          <span><input type="checkbox" name="scb1" value="on"
              onclick="connect_text('textforscb1',this.checked);">有り</span>：
          <%= f.text_field :medicine, placeholder: "保管場所", autocomplete: "medicine" , id:"textforscb1", disabled: true %><br>
          <span><input type="checkbox" name="scb2" value="on">無し</span>
        </div>

        <div class="anaphylaxis-lists">
           <%= f.label :anaphylaxis, "アナフィラキシー" %><br>
          <span><input type="checkbox" name="scb3" value="on"
              onclick="connect_text('textforscb3',this.checked);">有り</span>：
          <%= f.text_field :anaphylaxis, placeholder: "いつ・どこで", autocomplete: "anaphylaxis" , id:"textforscb3", disabled: true %><br>
          <span><input type="checkbox" name="scb4" value="on">無し</span>
        </div>

        <div class="box-inner-edit">
          <div class="column-memo">
            <%= f.label :allergy_other, "特記事項" %><br>
            <%= f.text_area :allergy_other, autofocus: true, placeholder: "例)  アトピー性皮膚炎、アレルギー性結膜炎 ", autocomplete: "allergy", size: "100x3" %>
          </div>
        </div>

        <div class="box-inner-edit">
          <div class="column-memo">
            <%= f.label :special_support, "特別支援" %><br>
            <%= f.text_area :special_support, placeholder: "例)  太郎 ", autocomplete: "special_support", size: "100x5" %>
          </div>
        </div>

        <div class="box-inner-edit">
          <div class="column-memo">
            <%= f.label :other_ht, "担任メモ" %><br>
            <%= f.text_area :other_ht, placeholder: "例)  2012-01-01 ", autocomplete: "other_ht", size: "100x5" %>
          </div>
        </div>

        <div class="box-inner-edit">
          <div class="column-memo">
            <%= f.label :other_nt, "養護教諭メモ" %><br>
            <%= f.text_area :other_nt, placeholder: "例)  1 ", autocomplete: "school_year", size: "100x5"  %>
          </div>
        </div>      
      </p>
      </div>

    </div>

        
      <div class="student-memo">
        <%= f.submit "登録" %>
      </div>

      <% end %>

    </div>

    <div class='back'>
      <%= link_to "戻る", root_path %>
    </div>

</div>

<script>
var livePatern = {
  canvas: null,
  context: null,
  cols: 0,
  rows: 0,
  colors: [252, 251, 249, 248, 241, 240],
  triangleColors: [],
  destColors: [],
  
  init: function(){
    this.canvas = document.getElementById('canvas');
    this.context = this.canvas.getContext('2d');
    this.cols = Math.floor(document.body.clientWidth / 24);
    this.rows = Math.floor(document.body.clientHeight / 24) + 1;
    
    this.canvas.width = document.body.clientWidth;
    this.canvas.height = document.body.clientHeight;
    
    this.drawBackground();
    this.animate();
  },
  
  drawTriangle: function(x, y, color, inverted){
    inverted = inverted == undefined ? false : inverted;

    this.context.beginPath();
    this.context.moveTo(x, y);
    this.context.lineTo(inverted ? x - 22 : x + 22, y + 11);
    this.context.lineTo(x, y + 22);
    this.context.fillStyle = "rgb("+color+","+color+","+color+")";
    this.context.fill();
    this.context.closePath();
  },
  
  getColor: function(){    
    return this.colors[(Math.floor(Math.random() * 6))];
  },
  
  drawBackground: function(){
    var eq = null;
    var x = this.cols;
    var destY = 0;
    var color, y;
    
    while(x--){
      eq = x % 2;
      y = this.rows;

      while(y--){
        destY = Math.round((y-0.5) * 24);

        this.drawTriangle(x * 24 + 2, eq == 1 ? destY : y * 24, this.getColor());
        this.drawTriangle(x * 24, eq == 1 ? destY  : y * 24, this.getColor(), true);
      }
    }
  },
  
  animate: function(){
    var me = this;

    var x = Math.floor(Math.random() * this.cols);
    var y = Math.floor(Math.random() * this.rows);
    var eq = x % 2;

    if (eq == 1) {
      me.drawTriangle(x * 24, Math.round((y-0.5) * 24) , this.getColor(), true);
    } else {
      me.drawTriangle(x * 24 + 2, y * 24, this.getColor());
    }

    setTimeout(function(){    
      me.animate.call(me);
    }, 10);
  },
};

!function(){livePatern.init();}()
</script>