<canvas id="canvas"></canvas>

<header class='top-page-header'>
  <div class='search-bar-contents'>
   <div class="icon-box">
    <%= link_to image_tag('cuota-sample.png', class:"cuota-icon"), "/" %>
   </div> 
  </div>
    <%= render "devise/shared/error_messages", resource: @student %> 
    <div class="notice"><%= flash[:notice] %></div>
  <h1>生徒一括登録</h1>
  <div class="box-student-csv">
    <div class="box-inner">
      <h5>csvファイルから生徒情報を読み込みます。</h5>
       <div class="csv-mandatory">
        <ul class="mandatory-item">必須項目
       </div>
          <div class="mandatory-item-details">
            <li>・last_name</li><li>苗字 ※全角</li>
          </div>
          <div class="mandatory-item-details">
            <li>・first_name</li><li>名前 ※全角</li>
          </div>
          <div class="mandatory-item-details">
            <li>・last_kana</li><li>苗字(フリガナ) ※全角カタカナ</li>
          </div>
          <div class="mandatory-item-details">
            <li>・first_kana</li><li>名前(フリガナ) ※全角カタカナ</li>
          </div>
          <div class="mandatory-item-details">
            <li>・school_year_id</li><li>学年 ※半角数字</li>
          </div>
          <div class="mandatory-item-details">
            <li>・school_class_id</li><li>クラス ※半角数字</li>
          </div>
          <div class="mandatory-item-details">
            <li>・number</li><li>出席番号 ※半角数字</li>
          </div>
          <div class="mandatory-item-details">
            <li>・gender_id</li><li>性別(男子:1,女子:2) ※半角数字</li>
          </div>
          <div class="mandatory-item-details">
            <li>・school_id</li><li>学校ID<%= "(#{@nursing_teacher.school_id})" %> ※半角数字</li>
          </div>
          <div class="mandatory-item-details">
            <li>・nursing_teacher_id</li><li>先生ID<%= "(#{@nursing_teacher.id})" %> ※半角数字</li>
          </div>
        </ul>
        <h6>※カラム名は必ず上記左の名称で統一してください。<br>
        ※カラム名が違うと正しく読み込まれません。</h6>
      <h6 class="csv-sample" id="csv-sample">csvファイル作成例</h6>

      <%= form_tag( {action: :import}, multipart: true) do %>
        <%= file_field_tag :file, accept: '.csv'%>
        <div class="box-login">
          <%= submit_tag "一括登録"%>
        </div>
        <%# <% if @errors.present? %> 
         <%# <% @errors.each do |error| %> 
           <%# <% error[:messages].each do |message| %> 
             <%# <li><%= "#{error[:row_num]}行目：#{message}" %></li> 
           <%# <% end %> 
         <%# <% end %> 
        <%# <% end %> 
        
      <% end %>
  </div>
</div>
</header>


<script>

var livePatern = {
  canvas: null,
  context: null,
  cols: 0,
  rows: 0,
  colors: [252, 251, 249, 248, 241, 240],
  triangleColors: [],
  destColors: [],
  
  init: function(){
    this.canvas = document.getElementById('canvas');
    this.context = this.canvas.getContext('2d');
    this.cols = Math.floor(document.body.clientWidth / 24);
    this.rows = Math.floor(document.body.clientHeight / 24) + 1;
    
    this.canvas.width = document.body.clientWidth;
    this.canvas.height = document.body.clientHeight;
    
    this.drawBackground();
    this.animate();
  },
  
  drawTriangle: function(x, y, color, inverted){
    inverted = inverted == undefined ? false : inverted;

    this.context.beginPath();
    this.context.moveTo(x, y);
    this.context.lineTo(inverted ? x - 22 : x + 22, y + 11);
    this.context.lineTo(x, y + 22);
    this.context.fillStyle = "rgb("+color+","+color+","+color+")";
    this.context.fill();
    this.context.closePath();
  },
  
  getColor: function(){    
    return this.colors[(Math.floor(Math.random() * 6))];
  },
  
  drawBackground: function(){
    var eq = null;
    var x = this.cols;
    var destY = 0;
    var color, y;
    
    while(x--){
      eq = x % 2;
      y = this.rows;

      while(y--){
        destY = Math.round((y-0.5) * 24);

        this.drawTriangle(x * 24 + 2, eq == 1 ? destY : y * 24, this.getColor());
        this.drawTriangle(x * 24, eq == 1 ? destY  : y * 24, this.getColor(), true);
      }
    }
  },
  
  animate: function(){
    var me = this;

    var x = Math.floor(Math.random() * this.cols);
    var y = Math.floor(Math.random() * this.rows);
    var eq = x % 2;

    if (eq == 1) {
      me.drawTriangle(x * 24, Math.round((y-0.5) * 24) , this.getColor(), true);
    } else {
      me.drawTriangle(x * 24 + 2, y * 24, this.getColor());
    }

    setTimeout(function(){    
      me.animate.call(me);
    }, 10);
  },
};

!function(){livePatern.init();}()


</script>
